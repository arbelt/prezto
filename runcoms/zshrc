#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

if [[ "$(uname)" = "Darwin" ]]; then
    # virtualenv setup
    # virtualenv_wrapper_init="/usr/local/bin/virtualenvwrapper.sh"
    # export WORKON_HOME="$HOME/Envs"

    # gpg-apent setup
    if [ -f "${HOME}/.gpg-agent-info" ]; then
        . "${HOME}/.gpg-agent-info"
        export GPG_AGENT_INFO
    else
        eval "$(gpg-agent --daemon --write-env-file)"
    fi

    unalias run-help
    autoload run-help
    HELPDIR=/usr/local/share/zsh/helpfiles

    if [ -f "/usr/local/etc/xml/catalog" ]; then
        export XML_CATALOG_FILES=/usr/local/etc/xml/catalog
    fi

    export VAGRANT_DEFAULT_PROVIDER=vmware_fusion

else
    # virtualenv_wrapper_init="/usr/bin/virtualenvwrapper.sh"
fi

# [[ -f "$virtualenv_wrapper_init" ]] && source "$virtualenv_wrapper_init"

# emacs cask

CASK_DIR="~/.cask"
if [[ -d "${CASK_DIR}" ]]; then
    export PATH="${CASK_DIR}:${PATH}"
fi

local -U pyenv_root_candidates
pyenv_root_candidates=(
    "/usr/local/opt/pyenv"
    "${HOME}/.pyenv"
)

unset PYENV_ROOT
for dirname in $pyenv_root_candidates; do
    if [[ -d "${dirname}" ]]; then
        export PYENV_ROOT="${dirname}"
        export PATH="${PYENV_ROOT}/bin:${PATH}"
        hash pyenv 2>/dev/null && eval "$(pyenv init -)"
        break
    fi
done

# fasd

if command -v fasd >/dev/null 2>&1; then
    eval "$(fasd --init auto)"
fi

# perlbrew

if [[ -s "${HOME}/perl5/perlbrew/etc/bashrc" ]]; then
    source "${HOME}/perl5/perlbrew/etc/bashrc"
fi


if command -v npm >/dev/null 2>&1; then
    eval "$(npm completion)"
fi

# nvm

if [[ -s "${HOME}/.nvm/nvm.sh" ]]; then
    source "${HOME}/.nvm/nvm.sh"
fi

# rbenv

# USE_RVM=true

if [[ -z "$USE_RVM" && -d "/usr/local/var/rbenv" ]]; then
    export RBENV_ROOT=/usr/local/var/rbenv
    eval "$(rbenv init -)"
elif [[ -s "${HOME}/.rvm/scripts/rvm" ]]; then
    source "${HOME}/.rvm/scripts/rvm"
fi

#scm_breeze

if [[ -s "${HOME}/.scm_breeze/scm_breeze.sh" ]]; then
    source "${HOME}/.scm_breeze/scm_breeze.sh"
fi

# taskwarrior


if command -v taskd >/dev/null 2>&1; then
    export TASKDDATA=~/server_data
fi

use_macports() {
    typeset -gU path
    path=(
	/opt/local/{bin,sbin}
	$path
    )
    export path
}

use_conda() {
    typeset -gU path
    if [[ -d "$HOME/anaconda/bin" ]]; then
	path=(
	    "${HOME}/anaconda/bin"
	    $path
	)
	export path
    else
	echo "Anaconda installation not found!"
	return 1
    fi
}

use_epd() {
    epd_env="$HOME/Library/Enthought/Canopy_64bit/User/bin/activate"
    if [[ -f "$epd_env" ]]; then
	source "$epd_env"
    else
	echo "Enthought not found!"
	return 1
    fi
}

unalias rm
hash mvim 2>/dev/null && alias vim='mvim -v'

if command gr >/dev/null 2>&1; then
    unalias gr
    alias gr='noglob gr'
fi
